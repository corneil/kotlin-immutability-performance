buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
}
plugins {
    id 'me.champeau.gradle.jmh' version '0.5.0-rc-1'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'java'
apply plugin: 'kotlin'

dependencies {

    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'org.jetbrains.kotlin:kotlin-reflect'

    testCompile 'org.jetbrains.kotlin:kotlin-test'

    jmhCompile 'org.openjdk.jmh:jmh-core:1.21'
    jmhCompile 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
    jmhCompile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.41'
    jmhCompile 'org.jetbrains.kotlin:kotlin-reflect:1.3.41'
}

jmh {
    duplicateClassesStrategy = 'warn'
    include = 'jmh'
    resultFormat = 'CSV'
    verbosity = logger.infoEnabled ? 'EXTRA' : 'NORMAL'
    benchmarkMode = ['thrpt']
    warmupIterations = 5
    iterations = 5
    threads = 1
    fork = 1
}

defaultTasks 'check', 'jmh'

jmhJar {
    manifest {
        attributes 'Main-Class': 'com.github.corneil.demos.EntitySortRunner'
    }
    exclude '*.jar'
    from {
        configurations.jmhRuntime.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

assemble.dependsOn(jmhJar)

task fatJar(type:Jar, dependsOn: [mainClasses]) {
    baseName "$project.name-fat"
    manifest {
        attributes 'Main-Class': 'com.github.corneil.demos.EntitySorter'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

assemble.dependsOn('fatJar')
